# AI Crypto Trading Bot - Environment Configuration Template
# Copy this file to .env.local and fill in your actual values

# ================================
# DATABASE CONFIGURATION
# ================================

# Primary Database (Supabase for production, PostgreSQL for local)
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key
DATABASE_URL=postgresql://postgres:password@localhost:5432/ai_trading_bot

# Local SQLite fallback (for development without Supabase)
SQLITE_DATABASE_PATH=./data/trading_bot.db
DATABASE_TYPE=postgresql  # Options: postgresql, sqlite

# ================================
# TELEGRAM BOT CONFIGURATION
# ================================

# Bot Token from @BotFather
TELEGRAM_BOT_TOKEN=1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789

# Webhook Configuration
TELEGRAM_WEBHOOK_URL=https://your-domain.com/api/telegram/webhook
TELEGRAM_SECRET_TOKEN=your-secret-webhook-token

# User Management
TELEGRAM_ALLOWED_USERS=123456789,987654321  # Comma-separated user IDs
TELEGRAM_ADMIN_USERS=123456789              # Admin user IDs (subset of allowed users)
TELEGRAM_VALIDATE_USERS=true

# Rate Limiting
TELEGRAM_RATE_LIMITING_ENABLED=true
TELEGRAM_RATE_LIMIT_WINDOW=60000    # 1 minute in milliseconds
TELEGRAM_RATE_LIMIT_MAX=20          # Max requests per window
TELEGRAM_RATE_LIMIT_SKIP_SUCCESS=true

# Security Settings
TELEGRAM_LOG_MESSAGES=false         # Log all messages (dev only)

# Feature Toggles
TELEGRAM_TRADING_ENABLED=false      # Enable live trading commands
TELEGRAM_REPORTING_ENABLED=true     # Enable daily reports
TELEGRAM_ANALYTICS_ENABLED=true     # Enable analytics commands
TELEGRAM_ADMIN_COMMANDS_ENABLED=false

# Optional Admin API Token
TELEGRAM_ADMIN_TOKEN=your-admin-api-token

# ================================
# TRADING CONFIGURATION
# ================================

# Trading Mode
TRADING_MODE=paper                  # Options: paper, live
INITIAL_BALANCE=50000
MAX_POSITIONS=5
RISK_PER_TRADE=0.02                # 2% risk per trade
STOP_LOSS_PERCENT=0.05             # 5% stop loss
TAKE_PROFIT_PERCENT=0.10           # 10% take profit

# Exchange API Keys (for live trading)
BINANCE_API_KEY=your-binance-api-key
BINANCE_SECRET_KEY=your-binance-secret-key
BINANCE_SANDBOX=true               # Use sandbox for testing

# Alpaca Trading (US Stocks/Crypto)
ALPACA_API_KEY=your-alpaca-api-key
ALPACA_SECRET_KEY=your-alpaca-secret-key
ALPACA_BASE_URL=https://paper-api.alpaca.markets  # Paper trading URL

# ================================
# AI AND ANALYTICS
# ================================

# OpenAI Configuration
OPENAI_API_KEY=your-openai-api-key
OPENAI_MODEL=gpt-4                 # Model to use for AI analysis
OPENAI_MAX_TOKENS=2000

# Market Data APIs
COINGECKO_API_KEY=your-coingecko-api-key
ALPHA_VANTAGE_API_KEY=your-alpha-vantage-api-key
CRYPTO_COMPARE_API_KEY=your-crypto-compare-api-key

# News and Sentiment APIs
NEWS_API_KEY=your-news-api-key
FINNHUB_API_KEY=your-finnhub-api-key

# ================================
# EXTERNAL SERVICES
# ================================

# n8n Workflow Automation
N8N_BASE_URL=http://localhost:5678
N8N_WEBHOOK_URL=http://localhost:5678/webhook
N8N_API_KEY=your-n8n-api-key

# Redis (for caching and session management)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your-redis-password

# ================================
# SECURITY AND ENCRYPTION
# ================================

# JWT Configuration
JWT_SECRET=your-jwt-secret-key-at-least-32-characters-long
JWT_EXPIRES_IN=24h

# Encryption Keys
ENCRYPTION_KEY=your-32-character-encryption-key
ENCRYPTION_IV=your-16-character-init-vector

# Vault Configuration (for credential management)
VAULT_ENABLED=false
VAULT_URL=http://localhost:8200
VAULT_TOKEN=your-vault-token

# ================================
# DEVELOPMENT CONFIGURATION
# ================================

# Environment
NODE_ENV=development               # Options: development, production, test
DEBUG=true
LOG_LEVEL=debug                   # Options: error, warn, info, debug

# Development Tools
HOT_RELOAD=true
AUTO_RESTART=true

# Testing Configuration
TEST_DATABASE_URL=sqlite::memory:
TEST_TELEGRAM_BOT_TOKEN=test-bot-token
TEST_USER_ID=123456789

# Ngrok Configuration (for local webhook testing)
NGROK_AUTH_TOKEN=your-ngrok-auth-token
NGROK_SUBDOMAIN=your-preferred-subdomain
NGROK_REGION=us                   # Options: us, eu, ap, au, sa, jp, in

# ================================
# MONITORING AND LOGGING
# ================================

# Logging
LOG_TO_FILE=true
LOG_FILE_PATH=./logs/app.log
LOG_ROTATION=daily

# Performance Monitoring
PERFORMANCE_MONITORING=true
PERFORMANCE_LOG_INTERVAL=60000    # Log performance metrics every minute

# Error Tracking
SENTRY_DSN=your-sentry-dsn
SENTRY_ENVIRONMENT=development

# Health Checks
HEALTH_CHECK_INTERVAL=30000       # Health check every 30 seconds
HEALTH_CHECK_TIMEOUT=5000         # 5 second timeout

# ================================
# RATE LIMITING AND THROTTLING
# ================================

# API Rate Limits
API_RATE_LIMIT_ENABLED=true
API_RATE_LIMIT_WINDOW=60000       # 1 minute
API_RATE_LIMIT_MAX=100            # Max 100 requests per minute

# Trading Rate Limits
TRADING_RATE_LIMIT_ENABLED=true
TRADING_RATE_LIMIT_WINDOW=1000    # 1 second
TRADING_RATE_LIMIT_MAX=1          # Max 1 trade per second

# ================================
# BACKUP AND RECOVERY
# ================================

# Database Backup
AUTO_BACKUP_ENABLED=true
BACKUP_INTERVAL=3600000           # Backup every hour
BACKUP_RETENTION_DAYS=7
BACKUP_PATH=./backups

# Configuration Backup
CONFIG_BACKUP_ENABLED=true
CONFIG_BACKUP_PATH=./config-backups

# ================================
# FEATURE FLAGS
# ================================

# Trading Features
ENABLE_PAPER_TRADING=true
ENABLE_LIVE_TRADING=false
ENABLE_FUTURES_TRADING=false
ENABLE_OPTIONS_TRADING=false

# AI Features
ENABLE_AI_ANALYSIS=true
ENABLE_SENTIMENT_ANALYSIS=true
ENABLE_PATTERN_RECOGNITION=true
ENABLE_RISK_MANAGEMENT=true

# Telegram Features
ENABLE_TELEGRAM_BOT=true
ENABLE_TELEGRAM_NOTIFICATIONS=true
ENABLE_TELEGRAM_TRADING=false
ENABLE_TELEGRAM_ADMIN=false

# Analytics Features
ENABLE_PERFORMANCE_TRACKING=true
ENABLE_PORTFOLIO_ANALYTICS=true
ENABLE_MARKET_ANALYTICS=true
ENABLE_REPORTING=true

# ================================
# ADVANCED CONFIGURATION
# ================================

# WebSocket Configuration
WS_ENABLED=true
WS_PORT=3001
WS_HEARTBEAT_INTERVAL=30000

# Caching
CACHE_ENABLED=true
CACHE_TTL=300000                  # 5 minutes default TTL
CACHE_MAX_SIZE=1000               # Max cache entries

# Queue Management
QUEUE_ENABLED=true
QUEUE_MAX_JOBS=1000
QUEUE_CONCURRENCY=5

# Session Management
SESSION_SECRET=your-session-secret-key
SESSION_MAX_AGE=86400000          # 24 hours
SESSION_SECURE=false              # Set to true in production with HTTPS

# ================================
# TESTING CONFIGURATION
# ================================

# Test Environment
TEST_MODE=false
MOCK_TRADING_ENABLED=true
MOCK_API_RESPONSES=true

# Test Data
GENERATE_TEST_DATA=true
TEST_DATA_DAYS=30                 # Generate 30 days of test data
TEST_PORTFOLIO_SIZE=10            # Number of test positions

# Integration Tests
RUN_INTEGRATION_TESTS=false
INTEGRATION_TEST_TIMEOUT=30000    # 30 seconds

# Performance Tests
RUN_PERFORMANCE_TESTS=false
PERFORMANCE_TEST_DURATION=60000   # 1 minute load test

# ================================
# DOCKER CONFIGURATION
# ================================

# Docker settings (when running in containers)
DOCKER_ENABLED=false
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=ai_trading_bot
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password

REDIS_HOST=redis
REDIS_PORT=6379

# Container Health Checks
CONTAINER_HEALTH_CHECK=true
CONTAINER_STARTUP_TIMEOUT=60000   # 1 minute startup timeout