{
  "name": "üéØ Master Trading Orchestrator",
  "description": "Main orchestration workflow that coordinates all AI trading activities and risk management",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 30
            }
          ]
        }
      },
      "id": "schedule-trigger",
      "name": "‚è∞ Trading Schedule",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [200, 300]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/trading/config",
        "authentication": "none",
        "requestMethod": "GET",
        "jsonParameters": true,
        "options": {}
      },
      "id": "check-trading-status",
      "name": "üîç Check Trading Status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [400, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "emergency-stop-check",
              "leftValue": "={{ $json.status.emergencyStop }}",
              "rightValue": false,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            },
            {
              "id": "trading-enabled-check",
              "leftValue": "={{ $json.config.enabled }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "safety-checks",
      "name": "üõ°Ô∏è Safety Checks",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [600, 300]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "crypto-symbols",
              "name": "cryptoSymbols",
              "value": "=[\"bitcoin\", \"ethereum\", \"solana\", \"cardano\", \"chainlink\", \"polkadot\", \"avalanche\"]",
              "type": "array"
            },
            {
              "id": "trading-capital",
              "name": "tradingCapital",
              "value": "=5000",
              "type": "number"
            },
            {
              "id": "timestamp",
              "name": "timestamp",
              "value": "={{ new Date().toISOString() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "set-trading-params",
      "name": "‚öôÔ∏è Set Trading Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [800, 200]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "halt-reason",
              "name": "haltReason",
              "value": "Trading halted - Emergency stop active or trading disabled",
              "type": "string"
            },
            {
              "id": "status",
              "name": "status",
              "value": "HALTED",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "set-halt-status",
      "name": "üõë Set Halt Status",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [800, 400]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "process-symbols",
      "name": "üîÑ Process Each Symbol",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [1000, 200]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/ai-analysis",
        "authentication": "none",
        "requestMethod": "GET",
        "jsonParameters": true,
        "options": {
          "queryParameters": {
            "parameters": [
              {
                "name": "symbol",
                "value": "={{ $json.cryptoSymbols[$('üîÑ Process Each Symbol').itemMatching($runIndex).json.batchIndex] }}"
              },
              {
                "name": "capital",
                "value": "={{ $json.tradingCapital }}"
              }
            ]
          }
        }
      },
      "id": "ai-analysis",
      "name": "üß† AI Analysis",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1200, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "buy-signal-check",
              "leftValue": "={{ $json.signal.action }}",
              "rightValue": "BUY",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "sell-signal-check",
              "leftValue": "={{ $json.signal.action }}",
              "rightValue": "SELL",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "trade-signal-check",
      "name": "üìä Trade Signal Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1400, 200]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/trading/execute",
        "authentication": "none",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "symbol",
              "value": "={{ $json.signal.symbol.toLowerCase() }}"
            },
            {
              "name": "capital",
              "value": "={{ $('‚öôÔ∏è Set Trading Parameters').item.json.tradingCapital }}"
            },
            {
              "name": "action",
              "value": "execute"
            }
          ]
        },
        "options": {}
      },
      "id": "execute-trade",
      "name": "‚ö° Execute Trade",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1600, 100]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "log-entry",
              "name": "logEntry",
              "value": "={{ $now.toFormat('yyyy-MM-dd HH:mm:ss') }} - HOLD signal for {{ $json.signal.symbol }} (Confidence: {{ $json.signal.confidence }}%, R/R: {{ $json.signal.riskReward }})",
              "type": "string"
            },
            {
              "id": "action",
              "name": "action",
              "value": "HOLD",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "log-hold-decision",
      "name": "üìù Log HOLD Decision",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [1600, 300]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/trading/positions",
        "authentication": "none",
        "requestMethod": "GET",
        "jsonParameters": true,
        "options": {}
      },
      "id": "monitor-positions",
      "name": "üëÅÔ∏è Monitor Positions",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1800, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "has-positions",
              "leftValue": "={{ $json.count }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "position-check",
      "name": "üìà Position Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [2000, 200]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "summary",
              "name": "tradingSummary",
              "value": "={{ $now.toFormat('yyyy-MM-dd HH:mm:ss') }} - Trading cycle complete. Active positions: {{ $json.count }}, Mode: {{ $json.mode }}",
              "type": "string"
            },
            {
              "id": "cycle-complete",
              "name": "cycleComplete",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "id": "cycle-summary",
      "name": "üìä Cycle Summary",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [2200, 200]
    }
  ],
  "connections": {
    "‚è∞ Trading Schedule": {
      "main": [
        [
          {
            "node": "üîç Check Trading Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Check Trading Status": {
      "main": [
        [
          {
            "node": "üõ°Ô∏è Safety Checks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üõ°Ô∏è Safety Checks": {
      "main": [
        [
          {
            "node": "‚öôÔ∏è Set Trading Parameters",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üõë Set Halt Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚öôÔ∏è Set Trading Parameters": {
      "main": [
        [
          {
            "node": "üîÑ Process Each Symbol",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîÑ Process Each Symbol": {
      "main": [
        [
          {
            "node": "üß† AI Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üß† AI Analysis": {
      "main": [
        [
          {
            "node": "üìä Trade Signal Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìä Trade Signal Check": {
      "main": [
        [
          {
            "node": "‚ö° Execute Trade",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üìù Log HOLD Decision",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ö° Execute Trade": {
      "main": [
        [
          {
            "node": "üëÅÔ∏è Monitor Positions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Log HOLD Decision": {
      "main": [
        [
          {
            "node": "üëÅÔ∏è Monitor Positions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üëÅÔ∏è Monitor Positions": {
      "main": [
        [
          {
            "node": "üìà Position Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìà Position Check": {
      "main": [
        [
          {
            "node": "üìä Cycle Summary",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üìä Cycle Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "staticData": null,
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": {
      "id": "error-handler-workflow"
    }
  },
  "pinData": {},
  "versionId": "1.0.0",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "master-trading-orchestrator",
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "trading",
      "name": "Trading"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z", 
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "ai",
      "name": "AI"
    }
  ]
} 