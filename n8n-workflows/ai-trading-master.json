{
  "name": "AI Trading Master Control",
  "description": "Main orchestration workflow for AI trading decisions",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 30
            }
          ]
        }
      },
      "id": "trigger-every-30s",
      "name": "Market Data Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [200, 300]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/ai-analysis",
        "options": {
          "queryParameters": {
            "parameters": [
              {
                "name": "symbol",
                "value": "bitcoin"
              },
              {
                "name": "capital",
                "value": "50000"
              }
            ]
          }
        }
      },
      "id": "ai-analysis-call",
      "name": "AI Market Analysis",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [400, 300]
    },
    {
      "parameters": {
        "jsCode": "// AI Decision Processing\nconst aiData = $input.first().json;\n\nconsole.log('ðŸ§  AI Analysis Result:', aiData);\n\nif (!aiData.success) {\n  return [{ json: { error: 'AI analysis failed', details: aiData.error } }];\n}\n\nconst signal = aiData.signal;\nconst shouldTrade = signal.confidence >= 70 && signal.riskReward >= 2.0;\n\nreturn [{\n  json: {\n    symbol: signal.symbol,\n    action: signal.action,\n    confidence: signal.confidence,\n    riskReward: signal.riskReward,\n    positionSize: signal.positionSize,\n    reasoning: signal.reasoning,\n    shouldTrade: shouldTrade,\n    marketRegime: signal.marketRegime,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "ai-decision-processor",
      "name": "AI Decision Processor",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [600, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "should-trade-condition",
              "leftValue": "={{ $json.shouldTrade }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "trade-decision-gate",
      "name": "Trade Decision Gate",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [800, 300]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/trading/execute",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"symbol\": $json.symbol,\n  \"action\": $json.action,\n  \"positionSize\": $json.positionSize,\n  \"confidence\": $json.confidence,\n  \"riskReward\": $json.riskReward,\n  \"reasoning\": $json.reasoning\n} }}",
        "options": {}
      },
      "id": "execute-trade",
      "name": "Execute Trade",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1000, 240]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/trading/log",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"symbol\": $json.symbol,\n  \"action\": \"HOLD\",\n  \"reason\": \"Did not meet trading criteria\",\n  \"confidence\": $json.confidence,\n  \"riskReward\": $json.riskReward\n} }}",
        "options": {}
      },
      "id": "log-hold-decision",
      "name": "Log Hold Decision",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1000, 360]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/portfolio/update",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"timestamp\": $json.timestamp,\n  \"analysis\": $json,\n  \"source\": \"ai-reasoning-engine\"\n} }}",
        "options": {}
      },
      "id": "update-dashboard",
      "name": "Update Dashboard",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1200, 300]
    }
  ],
  "connections": {
    "Market Data Trigger": {
      "main": [
        [
          {
            "node": "AI Market Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Market Analysis": {
      "main": [
        [
          {
            "node": "AI Decision Processor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Decision Processor": {
      "main": [
        [
          {
            "node": "Trade Decision Gate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trade Decision Gate": {
      "main": [
        [
          {
            "node": "Execute Trade",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Hold Decision",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Trade": {
      "main": [
        [
          {
            "node": "Update Dashboard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Hold Decision": {
      "main": [
        [
          {
            "node": "Update Dashboard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "staticData": null,
  "settings": {
    "executionOrder": "v1"
  },
  "pinData": {},
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "ai-trading-master-control",
  "tags": ["ai", "trading", "automation"]
} 